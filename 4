クロス集計表
> test1 <- read.table("ch041.dat",row.names=1,h=T)
> table1 <- table(test1$study,test1$result)
> table1
                
                 不合格 合格
  勉強した           50  100
  勉強しなかった     25   25
> table2 <- addmargins(table1)合計を追加する
> table2
                
                 不合格 合格 Sum
  勉強した           50  100 150
  勉強しなかった     25   25  50
  Sum                75  125 200
> prop.table(table1,1)相対度数を計算する、行なら1、列なら2
                
                    不合格      合格
  勉強した       0.3333333 0.6666667
  勉強しなかった 0.5000000 0.5000000
> addmargins(prop.table(table1))
                
                 不合格  合格   Sum
  勉強した        0.250 0.500 0.750
  勉強しなかった  0.125 0.125 0.250
  Sum             0.375 0.625 1.000
  
  Rには変数として数値型、文字列型、論理型。そしてもう一つファクターという型がある。
  Rでは型を確認するために、str()という関数が用意されている。
  ファクターは文字列などのベクトルに、いくつかのカテゴリーに分類した情報を追加したもの。
> size1 <- c("S","M","L","M","XL","S","L")
> size1
[1] "S"  "M"  "L"  "M"  "XL" "S"  "L" 
> str(size1)
 chr [1:7] "S" "M" "L" "M" "XL" "S" "L"
 factor()関数を使うと水準(level)と呼ばれる値を追加しデータをカテゴリーに分類する。
> size2 <- factor(size1)
> size2
[1] S  M  L  M  XL S  L 
Levels: L M S XL
> str(size2)
 Factor w/ 4 levels "L","M","S","XL": 3 2 1 2 4 3 1
> size3 <- factor(size1,levels=c("S","M","L","XL")) levelsで望むような順番にすることができる。
> str(size3)
 Factor w/ 4 levels "S","M","L","XL": 1 2 3 2 4 1 3
ファクター型のオブジェクトに対して関数table()を用いると水準ごとに集計した１次元の表が得られる。
データの要約結果を示すsummary()という関数を用いても同様の結果が得られる。
> table(size2)
size2
 L  M  S XL 
 2  2  2  1 
> summary(size2)
 L  M  S XL 
 2  2  2  1 
自分でカテゴリー分けするにはcut()と言う関数がある。
例えば１０時間より多く勉強した人を勉強した（”Y"),それ以下を勉強しなかった（”N")
> sh <- c(0,3,15,15,10,8,12)
> cut(sh,breaks = c(min(sh)-1,10,max(sh)),labels=c("N","Y"))
[1] N N Y Y N N Y
Levels: N Y
> cut(sh,breaks = c(min(sh),10,max(sh)+1),labels=c("N","Y"),right = F)
[1] N N Y Y Y N Y
Levels: N Y
xという値をaからbまでの区間で区切る時、a<x<=bかa<=x<bとなる様にどちらか一方に等号が入る。
省略された場合にはright=Tが規定値となる。
最初の例では-1<sh<=10,10<sh<=15
下の例では0<=sh<10,10<=sh<16で分けている。

演習問題
> x <- c(195,190,140,120,110)
p61表4.1を作る
> y <- cut(x,breaks=c(110,130,150,200),labels=c("110-130","130-150","150-"),right=F)
> table(y)
y
110-130 130-150    150- 
      2       1       2 


sweep()は行列に対してある統計量引くという処理を行う。
sweep()を用いて相対度数のクロス表を求める。
> sweep(table1,1,apply(table1,1,sum),FUN="/")
                
                    不合格      合格
  勉強した       0.3333333 0.6666667
  勉強しなかった 0.5000000 0.5000000
> sweep(table1,2,apply(table1,2,sum),FUN = "/")
                
                    不合格      合格
  勉強した       0.6666667 0.8000000
  勉強しなかった 0.3333333 0.2000000
> table1/sum(table1)
                
                 不合格  合格
  勉強した        0.250 0.500
  勉強しなかった  0.125 0.125
> sweep(table2,1,table2[,3],FUN = "/")
                
                    不合格      合格       Sum
  勉強した       0.3333333 0.6666667 1.0000000
  勉強しなかった 0.5000000 0.5000000 1.0000000
  Sum            0.3750000 0.6250000 1.0000000
> sweep(table2,2,table2[3,],FUN="/")
                
                    不合格      合格       Sum
  勉強した       0.6666667 0.8000000 0.7500000
  勉強しなかった 0.3333333 0.2000000 0.2500000
  Sum            1.0000000 1.0000000 1.0000000
> sweep(table2,1,table2[3,3],FUN="/")
                
                 不合格  合格   Sum
  勉強した        0.250 0.500 0.750
  勉強しなかった  0.125 0.125 0.250
  Sum             0.375 0.625 1.000
